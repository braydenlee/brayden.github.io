<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Brayden's Blog</title><link>/posts/</link><description>Recent content in Posts on Brayden's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 04 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Where to start</title><link>/posts/getting_started/</link><pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate><guid>/posts/getting_started/</guid><description>Learn something new everyday and share something now and then
Some useful tutorial This section serves at providing a start point for newbees. We need a fundamental understanding of some general concepts, an overview of the big picture, most frequently used tools, services, etc.
Linux basics One of the most comprehensive knowledge base about linux operating system and various of linux tools, softwares, services, I found so far, is the redhat documentation.</description></item><item><title>Recover Ubuntu from initramfs error caused by improper shutdown</title><link>/posts/recover_ubuntu_from_initramfs_error/</link><pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate><guid>/posts/recover_ubuntu_from_initramfs_error/</guid><description>Recover Ubuntu from initramfs error caused by improper shutdown Issue description Following a force shutdown of the server, the system failed to boot with following message:
initramfs: waiting for /dev/mapper/ubuntu&amp;ndash;vg-ubuntu&amp;ndash;lv to appear &amp;hellip; timeout waiting &amp;hellip; &amp;hellip;
Then the init process crashed with kernel panic.
Solution As if it&amp;rsquo;s due to initramfs damage by the improper shutdown, so the solution is to re-generate the initramfs.
Boot from a live CD/USB Could either burn a live iso to a USB stick or mount the ISO to the server (how to mount the ISO to a server via its BMC/IPMI tools, is out of the scope).</description></item><item><title>Route setting in Multihomed Server</title><link>/posts/dual_home_ubuntu/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>/posts/dual_home_ubuntu/</guid><description>Route setting in Multihomed servers The Issue For servers with multiples interfaces connecting to differenct networks, tend to have routing issues if multiple interfaces have default route settings. For example, I have a server with two NICs, one connect to external network in subnet 10.67.126.x/23, and the other connects to internal network in subnet 192.168.8.x/24. As the DHCP servers for the two subnets both provide default route, the routing table in my server will results in multiple default routes:</description></item><item><title>SSH: Fingerprint Mismatch for Dual-boot Servers</title><link>/posts/fingerprints_for_dual_boot_system/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>/posts/fingerprints_for_dual_boot_system/</guid><description>SSH: Fingerprint Mismatch for Dual-boot Servers The issue For server with multiple operating systems installed, ssh tends to fail with the fingerprints check:
$ ssh 10.67.126.129 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! Someone could be eavesdropping on you right now (man-in-the-middle attack)! It is also possible that a host key has just been changed. The fingerprint for the ECDSA key sent by the remote host is SHA256:I4+yk7+wa9rETt+jKFZ2tEvmSecoXRsDYQc1G/f2exA.</description></item><item><title>Deploy k8s Cluster Using kubespray</title><link>/posts/deploy_k8s_cluster_using_kubespray/</link><pubDate>Sat, 25 Dec 2021 00:00:00 +0000</pubDate><guid>/posts/deploy_k8s_cluster_using_kubespray/</guid><description>Introduction Nowadays, there&amp;rsquo;re couples of way to deploy a k8s cluster in various of form factors, from experimental cluster with a single node to production deployment with hundreds of servers.
This memo is a note for deploy a &amp;lsquo;product&amp;rsquo; k8s cluster using kubespray - limited by the resources for the experiment, no dedicated storage nodes provisioned, and the networking is not covered as well.
Node Role Etcd External IP Internal IP node-101 Controller yes 192.</description></item><item><title>High Availability &amp; Load Balancing Setup</title><link>/posts/high_availability-load_balancing_setup/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>/posts/high_availability-load_balancing_setup/</guid><description>Introduction High availability and Load Balancing are the most important features for online services, especially for services in production.
This memo will provide a step-by-step guide for how-to setup the load balancing and High availability for an online web services. The web service used here as the experimental setup, is kubernetes api server. You could use a dummy web service hosted by nginx or httpd as well.
In this experimental setup, three servers are used</description></item><item><title>Markdown Syntax Guide</title><link>/posts/markdown-syntax/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>/posts/markdown-syntax/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p></description></item><item><title>Rich Content</title><link>/posts/rich-content/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>/posts/rich-content/</guid><description>&lt;p>Hugo ships with several &lt;a class="link" href="https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes" target="_blank" rel="noopener"
>Built-in Shortcodes&lt;/a> for rich content, along with a &lt;a class="link" href="https://gohugo.io/about/hugo-and-gdpr/" target="_blank" rel="noopener"
>Privacy Config&lt;/a> and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p></description></item><item><title>Placeholder Text</title><link>/posts/placeholder-text/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>/posts/placeholder-text/</guid><description>&lt;p>Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p></description></item><item><title>Math Typesetting</title><link>/posts/math-typesetting/</link><pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate><guid>/posts/math-typesetting/</guid><description>&lt;p>Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p></description></item><item><title>Emoji Support</title><link>/posts/emoji-support/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>/posts/emoji-support/</guid><description>&lt;p>Emoji can be enabled in a Hugo project in a number of ways.&lt;/p></description></item><item><title>Creating a New Theme</title><link>/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>/posts/creating-a-new-theme/</guid><description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>(Hu)go Template Primer</title><link>/posts/hugo_template_primer/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>/posts/hugo_template_primer/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>/posts/getting_started_with_hugo/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>/posts/getting_started_with_hugo/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item><item><title>Migrate to Hugo from Jekyll</title><link>/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>/posts/migrate-from-jekyll/</guid><description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item></channel></rss>