[{"content":"Introduction Nowadays, there\u0026rsquo;re couples of way to deploy a k8s cluster in various of form factors, from experimental cluster with a single node to production deployment with hundreds of servers.\nThis memo is a note for deploy a \u0026lsquo;product\u0026rsquo; k8s cluster using kubespray - limited by the resources for the experiment, no dedicated storage nodes provisioned, and the networking is not covered as well.\n   Node Role Etcd External IP Internal IP      node-101 Controller yes  192.168.8.101 ubuntu22.04   node-102 Controller yes  192.168.8.102 ubuntu22.04   node-103 Controller \u0026amp; worker yes  192.168.8.103 ubuntu22.04    Prerequisites  3 servers, with reasonable CPU, memory and disk space At least 2 Ethernet interfaces per server  One interface for Internet access as some packages are downloaded on the fly; The other interface used for the cluster management, (as well as pods network in this setup);   Assume ubuntu 22.04 installed;  Detailed Steps Disable swap This is required on every node\n$ swapoff -a  Enable passwordless login via ssh This is to enable the passwordless login to the target nodes, so this is required to run on the deployment server (where we run the kubespray).\nGenerate ssh keys by running ssh-keygen, simply press \u0026ldquo;enter\u0026rdquo; on asking the passphrase.\n$ ssh-keygen  Copy the ssh key id to target server, enter the password following the prompt.\n$ ssh-copy-id brayden@192.168.8.101 $ ssh-copy-id brayden@192.168.8.102 $ ssh-copy-id brayden@192.168.8.103 Enable passwordless sudo Add the line in BOLD as shown below in the %sudo section, for the user used to provision the k8s cluster. This is required on every node.\n$ sudo vim /etc/sudoers # Allow members of group sudo to execute any command %sudo ALL=(ALL:ALL) ALL brayden ALL=(ALL:ALL) NOPASSWD:ALL Dependencies $ sudo apt install python3-pip $ sudo pip3 install --upgrade pip $ pip --version pip 21.3.1 from /home/brayden/.local/lib/python3.9/site-packages/pip (python 3.9) Download kubespray $ git clone https://github.com/kubernetes-sigs/kubespray.git $ cd kubespray $ sudo pip install -r requirements.txt Configure the cluster setup Copy the required configuration files, scripts to a dedicated folder to this cluster, in this example, the new folder is named as k8s-100-cluster, as the controller api server will be available at 192.168.8.100.\n$ cp -rfp inventory/sampe inventory/k8s-100-cluster  The major configuration about the cluster is done by the inventory.ini, which consists of four major sections\n all kube_control_plane etcd kube_node  $ vim inventory/k8s-100-cluster/inventory.ini # ## Configure 'ip' variable to bind kubernetes services on a # ## different ip than the default iface # ## We should set etcd_member_name for etcd cluster. The node that is not a etcd member do not need to set the value, or can set the empty string value. [all] **node-101 ansible_host=192.168.8.101 ip=192.168.8.101 etcd_member_name=etcd1 node-102 ansible_host=192.168.8.102 ip=192.168.8.102 etcd_member_name=etcd2 node-103 ansible_host=192.168.8.103 ip=192.168.8.103 etcd_member_name=etcd3** # ## configure a bastion host if your nodes are not directly reachable # [bastion] # bastion ansible_host=x.x.x.x ansible_user=some_user [kube_control_plane] **node-101 node-102 node-103** [etcd] **node-101 node-102 node-103** [kube_node] **node-103** Another important configuration file we shall touch is inventoryk8s-100-clustergroup_varsallall.yml.\nHere we disable the internal nginx based proxy, and use external load balanced implemented with haproxy.\n**apiserver_loadbalancer_domain_name: \u0026quot;lb.npg.intel\u0026quot;** **loadbalancer_apiserver:** **addres: 192.168.8.100** **port: 8443** **loadbalancer_apiserver_localhost: false** **#loadbalancer_apiserver_port: 6443** **#loadbalancer_apiserver_healthcheck_port: 8081** **upstream_dns_servers:** **- 8.8.8.8** **- 8.8.4.4** # Set the proxy, will be populated to apt source and container runtime proxy conf **http_proxy: \u0026quot;http://child-prc.intel.com:913\u0026quot;** **https_proxy: \u0026quot;http://child-prc.intel.com:913\u0026quot;** inventory/k8s-100-cluster/group_vars/k8s_cluster/k8s-cluster.yml\n**kube_service_addresses: 192.168.0.0/18** **kube_pods_subnet: 192.168.64.0/18** **container_manager: docker #containerd** **kubelet_deployment_type: host** Required Workaround  Only required if docker is selected as the container runtime.\n At the time this memo is being written, the ubuntu 22.04 is not yet GA, so some of the URLs or versions for the docker packages are not valid, hardcode required to fix the issue.\ndiff --git a/roles/container-engine/docker/vars/ubuntu.yml b/roles/container-engine/docker/vars/ubuntu.yml index 253dbf17..c0077ebf 100644 --- a/roles/container-engine/docker/vars/ubuntu.yml +++ b/roles/container-engine/docker/vars/ubuntu.yml @@ -17,16 +17,16 @@ docker_versioned_pkg: 'latest': docker-ce '18.09': docker-ce=5:18.09.9~3-0~ubuntu-{{ ansible_distribution_release|lower }} '19.03': docker-ce=5:19.03.15~3-0~ubuntu-{{ ansible_distribution_release|lower }} - '20.10': docker-ce=5:20.10.11~3-0~ubuntu-{{ ansible_distribution_release|lower }} - 'stable': docker-ce=5:20.10.11~3-0~ubuntu-{{ ansible_distribution_release|lower }} + '20.10': docker-ce=5:20.10.12~3-0~ubuntu-focal + 'stable': docker-ce=5:20.10.12~3-0~ubuntu-focal 'edge': docker-ce=5:20.10.11~3-0~ubuntu-{{ ansible_distribution_release|lower }} docker_cli_versioned_pkg: 'latest': docker-ce-cli '18.09': docker-ce-cli=5:18.09.9~3-0~ubuntu-{{ ansible_distribution_release|lower }} '19.03': docker-ce-cli=5:19.03.15~3-0~ubuntu-{{ ansible_distribution_release|lower }} - '20.10': docker-ce-cli=5:20.10.11~3-0~ubuntu-{{ ansible_distribution_release|lower }} - 'stable': docker-ce-cli=5:20.10.11~3-0~ubuntu-{{ ansible_distribution_release|lower }} + '20.10': docker-ce-cli=5:20.10.12~3-0~ubuntu-focal + 'stable': docker-ce-cli=5:20.10.12~3-0~ubuntu-focal 'edge': docker-ce-cli=5:20.10.11~3-0~ubuntu-{{ ansible_distribution_release|lower }} docker_package_info: @@ -44,5 +44,8 @@ docker_repo_info: repos: - \u0026gt; deb [arch={{ host_architecture }}] {{ docker_ubuntu_repo_base_url }} - {{ ansible_distribution_release|lower }} + focal stable diff --git a/roles/kubernetes/node/tasks/main.yml b/roles/kubernetes/node/tasks/main.yml index a342d940..9118a3e6 100644 --- a/roles/kubernetes/node/tasks/main.yml +++ b/roles/kubernetes/node/tasks/main.yml @@ -107,7 +107,7 @@ - name: Modprobe nf_conntrack_ipv4 modprobe: - name: nf_conntrack_ipv4 + name: nf_conntrack state: present register: modprobe_nf_conntrack_ipv4 ignore_errors: true # noqa ignore-errors Update the hosts file you may want to add one line for the virtual ip:\n$ sudo vim /etc/hosts 192.168.8.100 lb.npg.intel Provision the Cluster $ ansible-playbook -i inventory/k8s-100-cluster/inventory.ini --become --user=brayden --become-user=root cluster.yml  If error occured during the provistion, it\u0026rsquo;s better to reset the cluster, fix the issue, and relaunch the provision.\n$ ansible-playbook -i inventory/k8s-100-cluster/inventory.ini --become --user=brayden --become-user=root reset.yml $ ansible-playbook -i inventory/k8s-100-cluster/inventory.ini --become --user=brayden --become-user=root cluster.yml  Kubectl conf settings $ cd ~ $ mkdir .kube $ cp /etc/kubernetes/admin.conf .kube/ $ echo \u0026quot;export KUBECONFIG=/home/brayden/.kube/admin.conf\u0026quot; $ kubectl get pods -n kube-system NAME READY STATUS RESTARTS AGE calico-kube-controllers-5788f6558-kkbf4 1/1 Running 0 38h calico-node-hcdh4 1/1 Running 0 38h calico-node-xfbcq 1/1 Running 0 38h calico-node-z7qpt 1/1 Running 0 38h coredns-8474476ff8-7l69z 1/1 Running 0 38h coredns-8474476ff8-88 1/1 Running 0 38h dns-autoscaler-5ffdc7f89d-jqq5m 1/1 Running 0 38h kube-apiserver-node-101 1/1 Running 1 (38h ago) 39h kube-apiserver-node-102 1/1 Running 1 (38h ago) 39h kube-apiserver-node-103 1/1 Running 1 (38h ago) 39h kube-controller-manager-node-101 1/1 Running 1 39h kube-controller-manager-node-102 1/1 Running 2 (38h ago) 39h kube-controller-manager-node-103 1/1 Running 1 39h kube-proxy-fzlvr 1/1 Running 0 39h kube-proxy-k9z6g 1/1 Running 0 39h kube-proxy-wrhd7 1/1 Running 0 39h kube-scheduler-node-101 1/1 Running 2 (38h ago) 39h kube-scheduler-node-102 1/1 Running 1 39h kube-scheduler-node-103 1/1 Running 1 39h nodelocaldns-285cc 1/1 Running 0 38h nodelocaldns-2d477 1/1 Running 0 38h nodelocaldns-cpckx 1/1 Running 0 38h Troubleshootings Failed to download container images Initially, the container runtime is default to containerd, and kubespray uses nerdctl which is docker compatible tools to pull the container images.\nkubespray populated the proxy setting for apt source and containerd service according to the all.yml. However, nerdctl is not able to pull the container image, and no luck with \u0026ndash;extra-vars to the ansiable-playbook.\nansible-playbook -i inventory/k8s-100-cluster/inventory.ini --become --user=brayden cluster.yml --extra-vars \u0026quot;https_proxy=http://child-prc.intel.com:913,http_proxy=http://child-prc.intel.com:913\u0026quot;  While manually run the nerdctl from command line could pull the images successfully.\nSo this memo switch the container runtime to docker, which could pull the images with the proxy settings.\nNode-102 \u0026amp; Node-103 failed to join controller node-101 One of the error message reads:\nerror execution phase preflight: couldn't validate the identity of the API Server: configmaps \u0026quot;cluster-info\u0026quot; is forbidden: User \u0026quot;system:anonymous\u0026quot; cannot get resource \u0026quot;configmaps\u0026quot; in API group \u0026quot;\u0026quot; in the namespace \u0026quot;kube-public\u0026quot;  No dedicated effort spent to root cause this issue, a few changes made and the node could join the cluster successfully.\n Do reset before relaunch the provision procedure. Refer to section \u0026ldquo;Provision the Cluster\u0026rdquo;. Clean up the ip routing, name server setting.  Configure the Ethernet and nameserver explicitely in /etc/netplan/00-installer-config.yaml    # This is the network config written by 'subiquity' network: ethernets: eno1: dhcp4: true dhcp6: false match: macaddress: 00:1e:67:e6:14:ad nameservers: addresses: - 10.248.2.5 - 10.239.27.228 eno2: dhcp4: false addresses: - 192.168.8.101/24 match: macaddress: 00:1e:67:e6:14:ae * Cleanup the /etc/resolve.conf, remove the local addresses. * Make sure \u0026quot;sudo apt update\u0026quot; could be executed successfully. coredns service crashedbackoff Server\u0026rsquo;s console will continuous show:\n[19713.675335] IPVS: rr: UDP 192.168.0.3:53 - no destination available  coredns is in crashloopBackoff status:\nkube-system coredns-576cbf47c7-8phwt 0/1 CrashLoopBackOff 8  And the coredns container\u0026rsquo;s log reads\nplugin/loop: **Loop** (127.0.0.1:55953 -\u0026gt; :53) **detected for zone \u0026quot;.\u0026quot;**, see https://coredns.io/plugins/loop#troubleshooting. Query: \u0026quot;HINFO 4547991504243258144.3688648895315093531.\u0026quot;  There are also some logs reads\n\u0026quot;... 192.168.0.1 connection refused ...\u0026quot;  This was due to miss-configuration of nameserver, after correct the settings in all.yml, and clean up the /etc/resolv.conf, the issue is fixed.\nReference Install Kubernetes Cluster on Debian 10 with Kubespray | ComputingForGeeks\nDeploying kubernetes using Kubespray - YouTube\nloop (coredns.io)\nSetup Highly Available Kubernetes Cluster with HAProxy 🇬🇧 - DEV Community\nInstall Docker Engine on Ubuntu | Docker Documentation\nk8s join User “system:anonymous“ cannot get resource “configmaps“ in API group ““ in the namespace - stdworkflow\n","date":"2021-12-25T00:00:00Z","permalink":"/post/deploy_k8s_cluster_using_kubespray/","title":"Deploy k8s Cluster Using kubespray"},{"content":"Introduction High availability and Load Balancing are the most important features for online services, especially for services in production.\nThis memo will provide a step-by-step guide for how-to setup the load balancing and High availability for an online web services. The web service used here as the experimental setup, is kubernetes api server. You could use a dummy web service hosted by nginx or httpd as well.\nIn this experimental setup, three servers are used\n node-101 192.168.8.101 # K8s master node\nnode-102 192.168.8.102 # K8s master node\nnode-103 192.168.8.103 # K8s master node \u0026amp; worker node\n First we shall implement a load balancer to serve the incoming access request to the API server using HAproxy, then implement high availability using keepalived for the HAproxy itself so there\u0026rsquo;s no actual single point of failure in this setup. Note that, this guide implemented a active-passive mode high availability.\nPrerequisites The procedure is validated on Ubuntu 22.04 daily build 20211128.\n Make sure the apt source is configured properly, or you have the required packages and their dependencies offline. Packages HAproxy and keepalived  Detailed steps We shall deploy the HAproxy and keepalived on the same servers (node-101 \u0026amp; node-102) where the k8s api server resides. Note that it\u0026rsquo;s not neccessary to be on the same servers, and on heavy loaded system, would be better to have dedicated load balancer servers to host HAproxy.\nInstall the required packages Execute the following command on both node-101 and node-102\nsudo apt install haproxy keepalived  Configure Load Balancer Apply the configuration on both node-101 and node-102\nsudo vim /etc/haproxy/haproxy.cfg  Add the frontend and backend sections to the end of the cfg file as shown below:\nglobal log /dev/log local0 log /dev/log local1 notice chroot /var/lib/haproxy stats socket /run/haproxy/admin.sock mode 660 level admin expose\\-fd listeners stats timeout 30s user haproxy group haproxy daemon \\# Default SSL material locations ca\\-base /etc/ssl/certs crt\\-base /etc/ssl/private \\# See: https://ssl\\-config.mozilla.org/\\#server=haproxy\u0026amp;server\\-version=2.0.3\u0026amp;config=intermediate ssl\\-default\\-bind\\-ciphers ECDHE\\-ECDSA\\-AES128\\-GCM\\-SHA256:ECDHE\\-RSA\\-AES128\\-GCM\\-SHA256:ECDHE\\-ECDSA\\-AES256\\-GCM\\-SHA384:ECDHE\\-RSA\\-AES256\\-GCM\\-SHA384:ECDHE\\-ECDSA\\-CHACHA20\\-POLY1305:ECDHE\\-RSA\\-CHACHA20\\-POLY1305:DHE\\-RSA\\-AES128\\-GCM\\-SHA256:DHE\\-RSA\\-AES256\\-GCM\\-SHA384 ssl\\-default\\-bind\\-ciphersuites TLS\\_AES\\_128\\_GCM\\_SHA256:TLS\\_AES\\_256\\_GCM\\_SHA384:TLS\\_CHACHA20\\_POLY1305\\_SHA256 ssl\\-default\\-bind\\-options ssl\\-min\\-ver TLSv1.2 no\\-tls\\-tickets defaults log global mode http option httplog option dontlognull timeout connect 5000 timeout client 50000 timeout server 50000 errorfile 400 /etc/haproxy/errors/400.http errorfile 403 /etc/haproxy/errors/403.http errorfile 408 /etc/haproxy/errors/408.http errorfile 500 /etc/haproxy/errors/500.http errorfile 502 /etc/haproxy/errors/502.http errorfile 503 /etc/haproxy/errors/503.http errorfile 504 /etc/haproxy/errors/504.http frontend k8s\\-apiserver bind **192.168.8.100:8443** \\#ssl crt /etc/ssl/certs/haproxy.pem mode tcp default\\_backend kubernetes\\-apiserver \\#option forwardfor backend kubernetes\\-apiserver mode tcp balance roundrobin **server node\\-101 192.168.8.101:6443** check verify none inter 10000 **server node\\-102 192.168.8.102:6443** check verify none inter 10000 **server node\\-103 192.168.8.103:6443** check verify none inter 10000 listen stats bind 192.168.8.100:80 mode http stats enable stats uri  Note that, 192.168.8.100 is the virtual IP which is also known as floating IP, which will be implemented by keepalived in later section. The k8s API server is provisioned and accessible via port 6443 on master nodes, and we expose the API server on 192.168.8.100:8443\nNow restart the HAproxy\nsudo systemctl restart haproxy  Configure High availability for HAproxy Apply the configuration on both node-101 and node 102\nsudo vim /etc/keepalived/keepalived.conf \\# Global Settings for notifications global\\_defs { notification\\_email { \\\u0026lt;yourid\\\u0026gt;@\\\u0026lt;yourdomain\\\u0026gt;.com \\# Email address for notifications } notification\\_email\\_from \\\u0026lt;yourid\\\u0026gt;@\\\u0026lt;yourdomain\\\u0026gt;.com \\# The from address for the notifications smtp_server 127.0.0.1 \\# SMTP server address smtp\\_connect\\_timeout 15 } \\# Define the script used to check if haproxy is still working vrrp\\_script chk\\_haproxy { script \u0026quot;/usr/bin/killall \\-0 haproxy\u0026quot; interval 2 weight 2 } \\# Configuration for Virtual Interface vrrp\\_instance LB\\_VIP { **interface eno2** **state MASTER** \\# set to MASTER on primary server, node\\-101 \\# state BACKUP \\# set to BACKUP on the secondary server node\\-102 **priority 101** \\# set to 101 on primary server, node\\-101 \\# priority 99 \\# set to 99 on secondary server, node\\-102 \\# so by default, node\\-101 will be elected as the active proxy server \\(load balancer\\). virtual\\_router\\_id 51 smtp\\_alert \\# Enable Notifications Via Email authentication { auth\\_type AH auth\\_pass myP@ssword \\# Password for accessing vrrpd. Same on all devices } unicast\\_src\\_ip **192.168.8.101** \\# Private IP address of this haproxy server, set to 8.102 for node\\-102 unicast\\_peer { **192.168.8.102** \\# Private IP address of the peer haproxy proxy server, set to 8.101 for node\\-102 } \\# The virtual ip address shared between the two loadbalancers virtual\\_ipaddress { **192.168.8.100** } \\# Use the Defined Script to Check whether to initiate a fail over track\\_script { chk\\_haproxy } }  restart the keepalived service\nsudo systemctl restart keepalived  Completion If everything works as expected, you now should be able to see the virtual IP@ on eno2 in server node-101:\nip addr show eno2 4: eno2: \\\u0026lt;BROADCAST,MULTICAST,UP,LOWER\\_UP\\\u0026gt; mtu 1500 qdisc mq state UP group default qlen 1000 link/ether 00:1e:67:e6:14:ae brd ff:ff:ff:ff:ff:ff altname enp3s0f3 inet 192.168.8.101/24 scope global eno2 valid\\_lft forever preferred\\_lft forever inet 192.168.8.100/32 scope global eno2 valid\\_lft forever preferred\\_lft forever inet6 fe80::21e:67ff:fee6:14ae/64 scope link valid\\_lft forever preferred\\_lft forever  and try to access the service:\nnc \\-vz 192.168.8.100 8443 Connection to 192.168.8.100 8443 port \\[tcp/https\\] succeeded\\!  Reference Adding HAProxy as load balancer to the Kubernetes cluster | Dominique St-Amand (domstamand.com)\nCreate a Highly Available Kubernetes Cluster Using Keepalived and HAproxy | by KubeSphere | ITNEXT\nConfigure Highly Available HAProxy with Keepalived on Ubuntu 20.04\nkifarunix.com\nInstall and Setup HAProxy on Ubuntu 20.04 - kifarunix.com\nKeeping IPs alive without keepalived - retinadata\nHigh Availability Guide Red Hat CloudForms 4.6 | Red Hat Customer Portal\nExposing the Kubernetes API - D2iQ Docs\n","date":"2021-12-22T00:00:00Z","permalink":"/post/high_availability-load_balancing_setup/","title":"High Availability \u0026 Load Balancing Setup"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用  思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n 图片  Photo by Florian Klauer on Unsplash   Photo by Luca Bravo on Unsplash \n Photo by Helena Hertz on Unsplash   Photo by Hudai Gayiran on Unsplash \n![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"/post/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_120x120_fill_q75_box_smart1.jpg","permalink":"/post/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","date":"2019-03-11T00:00:00Z","image":"/post/markdown-syntax/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"/post/markdown-syntax/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019  Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }   bilibilibi Shortcode  ","date":"2019-03-10T00:00:00Z","permalink":"/post/rich-content/","title":"Rich Content"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"/post/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"/post/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"/post/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"2019-03-05T00:00:00Z","image":"/post/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"/post/emoji-support/","title":"Emoji Support"}]